{
  "permissions": {
    "allow": [
      "Bash(flutter analyze:*)",
      "mcp__ide__getDiagnostics",
      "Bash(dir:*)",
      "Bash(grep:*)",
      "Bash(mkdir:*)",
      "WebSearch",
      "WebFetch(domain:pub.dev)",
      "Bash(flutter:*)",
      "Bash(dart analyze:*)",
      "Bash(firebase deploy:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(touch:*)",
      "Bash(dart run:*)",
      "Bash(mv:*)",
      "Bash(rm:*)",
      "Bash(dart fix:*)",
      "Bash(git rm:*)",
      "Bash(true)",
      "Bash(timeout:*)",
      "Bash(git grep:*)",
      "Bash(git filter-branch:*)",
      "Bash(set FILTER_BRANCH_SQUELCH_WARNING=1)",
      "Bash(git gc:*)",
      "Bash(python:*)",
      "Bash(if [ -f .env ])",
      "Bash(then echo \".env file exists\")",
      "Bash(else echo \".env file not found\")",
      "Bash(fi)",
      "Bash(move libdebug_firebase.html webdebug.html)",
      "Bash(start webdebug.html)",
      "Bash(start webdebug_firebase.html)",
      "Bash(start debug_firebase.html)",
      "Bash(del libcoreservicesfirebase_test_service.dart)",
      "Bash(firebase projects:list:*)",
      "Bash(firebase logout:*)",
      "Bash(firebase login:*)",
      "Bash(firebase use:*)",
      "Bash(start test_products.html)",
      "Bash(firebase auth:export:*)",
      "Bash(if [ -f lib/firebase_options.dart ])",
      "Bash(then echo \"File exists\")",
      "Bash(else echo \"File not found\")",
      "Bash(where flutter)",
      "Bash(powershell:*)",
      "Bash(start test_auth.html)",
      "WebFetch(domain:turbo-air-viewer.web.app)",
      "Bash(dart pub global activate:*)",
      "Bash(start test_firebase_config.html)",
      "Bash(firebase database:get:*)",
      "Bash(if [ -f \"D:\\OneDrive\\Documentos\\-- TurboAir\\7 Bots\\Turbots\\-- Flutter App\\turbo_air_products.xlsx\" ])",
      "Bash(pip install:*)",
      "Bash(node:*)",
      "Bash(npm init:*)",
      "Bash(npm install:*)",
      "Bash(for sku in PRO-12R-N PRO-26R-N TSR-23SD-N6 M3R24-1-N PST-28-N)",
      "Bash(do if [ -d \"D:\\Flutter App\\Turbo-Air-Viewer-Flutter-App\\assets\\screenshots\\$sku\" ])",
      "Bash(else echo \"$sku: MISSING\")",
      "Bash(done)",
      "Bash(ls:*)",
      "Bash(git log:*)",
      "Bash(node:*)",
      "Bash(firebase database:get:*)",
      "Bash(find:*)",
      "Bash(dart check_env.dart:*)",
      "Bash(then echo \"firebase_options.dart EXISTS - SHOULD BE GITIGNORED!\")",
      "Bash(else echo \"firebase_options.dart not found (good)\")",
      "Bash(firebase projects:create:*)",
      "Bash(firebase apps:create:*)",
      "Bash(firebase apps:sdkconfig:*)",
      "Bash(firebase init:*)",
      "Bash(firebase database:instances:create:*)",
      "Bash(firebase setup:web:*)",
      "Bash(firebase hosting:sites:create:*)",
      "Bash(firebase projects:delete:*)",
      "Bash(firebase auth:import:*)",
      "Bash(start setup_auth.html)",
      "Bash(start create_database.html)",
      "Bash(start copy_database_data.html)",
      "Bash(start fix_database_permissions.html)",
      "Bash(start upload_to_firebase.html)",
      "Bash(start upload_products_direct.html)",
      "WebFetch(domain:taquotes-default-rtdb.firebaseio.com)",
      "Bash(for dir in assets/screenshots/*/)",
      "Bash(do echo \"    - $dir\")",
      "Bash(firebase hosting:releases:list:*)",
      "Bash(firebase hosting:clone:*)",
      "Bash(cat:*)",
      "Bash(git reset:*)",
      "Bash(dart:*)",
      "Bash(else echo \"firebase_options.dart not found (good)\")",
      "Bash(firebase emulators:start:*)",
      "Bash(curl:*)",
      "Bash(firebase functions:log:*)",
      "Bash(taskkill:*)",
      "Bash(then echo \"WARNING: firebase_options.dart exists - SHOULD BE GITIGNORED!\")",
      "Bash(else echo \"✓ firebase_options.dart not found (good)\")",
      "Bash(then echo \"WARNING: .env file exists locally\")",
      "Bash(then echo \"WARNING: firebase_options.dart exists locally\")",
      "Bash(if [ -f functions/.env ])",
      "Bash(then echo \"WARNING: functions/.env exists locally\")",
      "Bash(git check-ignore:*)",
      "Bash(firebase functions:config:set:*)",
      "Bash(where java)",
      "Bash(set JAVA_HOME=C:Program FilesMicrosoftjdk-17.0.16.8-hotspot)",
      "Bash(git checkout:*)",
      "Bash(del libcoreservicespinned_products_service.dart)",
      "Bash(else echo \"✓ .env file not found (good)\")",
      "Bash(else echo \"✓ firebase_options.dart not found (good)\")",
      "Bash(else echo \"✓ functions/.env not found (good)\")",
      "Bash(if [ -f \"C:\\Users\\andre\\Desktop\\-- Flutter App\\firebase-admin-key.json\" ])",
      "Bash(then echo \"Firebase admin key exists\")",
      "Bash(else echo \"Firebase admin key not found\")",
      "Bash(sed:*)",
      "Bash(for dir in assets/thumbnails/*/)",
      "Bash(do echo \"  - $dir\")",
      "Bash(cmd /c:*)",
      "Bash(else echo \"✓ .env file not found (good)\")",
      "Bash(else echo \"✓ firebase_options.dart not found (good)\")",
      "Bash(else echo \"✓ functions/.env not found (good)\")"
    ],
    "deny": [],
    "ask": [
      "Bash(git push:*)"
    ],
    "defaultMode": "acceptEdits"
  }
}